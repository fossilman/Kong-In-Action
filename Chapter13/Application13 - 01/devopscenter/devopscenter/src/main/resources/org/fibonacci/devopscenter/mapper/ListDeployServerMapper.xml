<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.fibonacci.devopscenter.mapper.ListDeployServerMapper">
  <resultMap id="BaseResultMap" type="org.fibonacci.devopscenter.domain.ListDeployServer">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="deploy_id" jdbcType="BIGINT" property="deployId" />
    <result column="gitlab_version" jdbcType="VARCHAR" property="gitlabVersion" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="server_ip" jdbcType="VARCHAR" property="serverIp" />
    <result column="server_port" jdbcType="VARCHAR" property="serverPort" />
    <result column="vagrancy" jdbcType="INTEGER" property="vagrancy" />
    <result column="publish_status" jdbcType="VARCHAR" property="publishStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
  </resultMap>
  <sql id="Base_Column_List">
    id, deploy_id, gitlab_version, name, server_ip, server_port, vagrancy, publish_status,
    create_time, update_time, create_by, update_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pb_list_deploy_server
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByVersion" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pb_list_deploy_server
    where deploy_id=#{deployid,jdbcType=BIGINT} and gitlab_version = #{version,jdbcType=VARCHAR}
    order by create_time
  </select>
  <select id="selectByDeployid" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pb_list_deploy_server
    where deploy_id = #{deployid,jdbcType=BIGINT}
  </select>
  <select id="selectBylistid" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select s.server_ip,s.server_port,s.name,s.publish_status from pb_list_deploy_server s where s.deploy_id = (select d.id
    from pb_list_deploy d where d.list_id=#{listid,jdbcType=BIGINT} order by create_time desc limit 1)
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pb_list_deploy_server
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.fibonacci.devopscenter.domain.ListDeployServer">
    insert into pb_list_deploy_server (id, deploy_id, gitlab_version, 
      name, server_ip, server_port,
      vagrancy, publish_status, create_time, 
      update_time, create_by, update_by
      )
    values (#{id,jdbcType=BIGINT}, #{deployId,jdbcType=BIGINT}, #{gitlabVersion,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{serverIp,jdbcType=VARCHAR}, #{serverPort,jdbcType=VARCHAR},
      #{vagrancy,jdbcType=INTEGER}, #{publishStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.fibonacci.devopscenter.domain.ListDeployServer" useGeneratedKeys="true" keyProperty="id">
    insert into pb_list_deploy_server
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="deployId != null">
        deploy_id,
      </if>
      <if test="gitlabVersion != null">
        gitlab_version,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="serverIp != null">
        server_ip,
      </if>
      <if test="serverPort != null">
        server_port,
      </if>
      <if test="vagrancy != null">
        vagrancy,
      </if>
      <if test="publishStatus != null">
        publish_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="deployId != null">
        #{deployId,jdbcType=BIGINT},
      </if>
      <if test="gitlabVersion != null">
        #{gitlabVersion,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="serverIp != null">
        #{serverIp,jdbcType=VARCHAR},
      </if>
      <if test="serverPort != null">
        #{serverPort,jdbcType=VARCHAR},
      </if>
      <if test="vagrancy != null">
        #{vagrancy,jdbcType=INTEGER},
      </if>
      <if test="publishStatus != null">
        #{publishStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.fibonacci.devopscenter.domain.ListDeployServer">
    update pb_list_deploy_server
    <set>
      <if test="deployId != null">
        deploy_id = #{deployId,jdbcType=BIGINT},
      </if>
      <if test="gitlabVersion != null">
        gitlab_version = #{gitlabVersion,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="serverIp != null">
        server_ip = #{serverIp,jdbcType=VARCHAR},
      </if>
      <if test="serverPort != null">
        server_port = #{serverPort,jdbcType=VARCHAR},
      </if>
      <if test="vagrancy != null">
        vagrancy = #{vagrancy,jdbcType=INTEGER},
      </if>
      <if test="publishStatus != null">
        publish_status = #{publishStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.fibonacci.devopscenter.domain.ListDeployServer">
    update pb_list_deploy_server
    set deploy_id = #{deployId,jdbcType=BIGINT},
      gitlab_version = #{gitlabVersion,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      server_ip = #{serverIp,jdbcType=VARCHAR},
      server_port = #{serverPort,jdbcType=VARCHAR},
      vagrancy = #{vagrancy,jdbcType=INTEGER},
      publish_status = #{publishStatus,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByIps" parameterType="model.bo.ShellBo">
        update pb_list_deploy_server
        set publish_status = #{result},
        update_time = NOW()
        where id = #{id,jdbcType=BIGINT}
    </update>

  <delete id="deleteByDeployId">
    delete from pb_list_deploy_server
    where deploy_id in
    <foreach collection="list"  item="item" open="(" separator="," close=")"  >
      #{item}
    </foreach>
  </delete>
</mapper>