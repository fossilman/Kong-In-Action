<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.fibonacci.routeplus.mapper.ServicesRoutePluginMapper">
  <resultMap id="BaseResultMap" type="org.fibonacci.routeplus.domain.ServicesRoutePlugin">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="service_id" jdbcType="INTEGER" property="serviceId" />
    <result column="route_id" jdbcType="INTEGER" property="routeId" />
    <result column="plugin_id" jdbcType="INTEGER" property="pluginId" />
    <result column="plugin_name" jdbcType="VARCHAR" property="pluginName" />
    <result column="plugin_config" jdbcType="VARCHAR" property="pluginConfig" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, service_id, route_id, plugin_id, plugin_name, plugin_config,enabled, create_time, update_time
  </sql>
  <sql id="Simple_Column_List">
    id, service_id, route_id, plugin_id, plugin_name, plugin_config,enabled
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from services_route_plugin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from services_route_plugin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.fibonacci.routeplus.domain.ServicesRoutePlugin">
    insert into services_route_plugin (id, service_id, route_id,
      plugin_id, plugin_name, plugin_config,
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{serviceId,jdbcType=INTEGER}, #{routeId,jdbcType=INTEGER},
      #{pluginId,jdbcType=INTEGER}, #{pluginName,jdbcType=VARCHAR}, #{pluginConfig,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.fibonacci.routeplus.domain.ServicesRoutePlugin" keyProperty="id" useGeneratedKeys="true">
    insert into services_route_plugin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="serviceId != null">
        service_id,
      </if>
      <if test="routeId != null">
        route_id,
      </if>
      <if test="pluginId != null">
        plugin_id,
      </if>
      <if test="pluginName != null">
        plugin_name,
      </if>
      <if test="pluginConfig != null">
        plugin_config,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="serviceId != null">
        #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="routeId != null">
        #{routeId,jdbcType=INTEGER},
      </if>
      <if test="pluginId != null">
        #{pluginId,jdbcType=INTEGER},
      </if>
      <if test="pluginName != null">
        #{pluginName,jdbcType=VARCHAR},
      </if>
      <if test="pluginConfig != null">
        #{pluginConfig,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.fibonacci.routeplus.domain.ServicesRoutePlugin">
    update services_route_plugin
    <set>
      <if test="serviceId != null">
        service_id = #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="routeId != null">
        route_id = #{routeId,jdbcType=INTEGER},
      </if>
      <if test="pluginId != null">
        plugin_id = #{pluginId,jdbcType=INTEGER},
      </if>
      <if test="pluginName != null">
        plugin_name = #{pluginName,jdbcType=VARCHAR},
      </if>
      <if test="pluginConfig != null">
        plugin_config = #{pluginConfig,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.fibonacci.routeplus.domain.ServicesRoutePlugin">
    update services_route_plugin
    set service_id = #{serviceId,jdbcType=INTEGER},
      route_id = #{routeId,jdbcType=INTEGER},
      plugin_id = #{pluginId,jdbcType=INTEGER},
      plugin_name = #{pluginName,jdbcType=VARCHAR},
      plugin_config = #{pluginConfig,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByServiceIdArrays" parameterType="java.util.List" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from services_route_plugin
    where service_id in
    <foreach collection="list" index="index" item="id"
             open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>

  <select id="selectByRoutesIdArrays" parameterType="java.util.List" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from services_route_plugin
    where route_id in
    <foreach collection="list" index="index" item="id"
             open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>

  <select id="selectByServiceIdAndPlugin" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from services_route_plugin
    where service_id =#{serviceId,jdbcType=INTEGER} and plugin_name=#{pluginName} limit 1

  </select>

  <delete id="deleteByServiceId" parameterType="java.lang.Integer">
    delete from services_route_plugin
    where service_id = #{serviceId,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByRouteId" parameterType="java.lang.Integer">
    delete from services_route_plugin
    where route_id = #{routeId,jdbcType=INTEGER}
  </delete>

  <select id="selectById" resultMap="BaseResultMap">
    select
    <include refid="Simple_Column_List" />
    from services_route_plugin
    where id = #{id}
  </select>

  <delete id="batchdeleteByRoutesIds" parameterType="java.util.List">
    delete from services_route_plugin
    where route_id in
    <foreach collection="list"  item="item" open="(" separator="," close=")"  >
      #{item}
    </foreach>
  </delete>
</mapper>
