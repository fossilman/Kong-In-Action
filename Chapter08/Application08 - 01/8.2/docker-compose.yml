version: "3"
services:
  postgres:
    container_name: postgres
    build:
      context: ./postgres
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    ports: ['5432:5432']
    networks:
      demo:
        ipv4_address: 62.20.10.2

  kong:
    container_name: kong
    build: ./kong
    environment: 
      KONG_PG_HOST: 62.20.10.2
      KONG_DATABASE: "postgres"
      KONG_PG_PASSWORD: kong
    ports: ['8001:8001','8000:8000']
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    volumes:
      - ./kong:/etc/kong/
    command: /bin/bash -c "kong migrations bootstrap && kong start -c /etc/kong/kong.conf.default" 
    networks:
      demo:
        ipv4_address: 62.20.10.4

  go:
    container_name: go
    build: ./go
    environment:
      GO111MODULE: "on"
      GOPROXY: "https://goproxy.cn"
    ports: ['8080:8080']
    volumes:
      - ./go/Demo:/root
    command: /bin/bash -c "go build -o demo && ./demo" 
    networks:
      demo:
        ipv4_address: 62.20.10.5

  node:
    container_name: node
    build: ./node
    ports: ['8081:8080']
    volumes:
      - ./node/Demo/:/root/
    command: /bin/bash -c "npm install && npm start"
    networks:
      demo:
        ipv4_address: 62.20.10.6

networks:
  demo:
    ipam:
      config:
        - subnet: 62.20.10.0/16
